name: Validate Semantic Scopes

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'queries/**'
      - 'grammar.js'
      - 'tests/**/*.cune'
      - 'scripts/validate_scopes.py'
  pull_request:
    branches: [ main ]
    paths:
      - 'queries/**'
      - 'grammar.js'
      - 'tests/**/*.cune'
      - 'scripts/validate_scopes.py'

jobs:
  validate-scopes:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        npm install
        npm install -g tree-sitter-cli

    - name: Build grammar
      run: |
        ./build.sh

    - name: Test queries
      run: |
        ./test_queries.sh

    - name: Validate semantic scopes
      run: |
        python3 scripts/validate_scopes.py

    - name: Check scope coverage
      id: coverage
      run: |
        python3 scripts/validate_scopes.py | tee scope_report.txt
        # Extract coverage metrics
        COVERED=$(grep "Covered nodes:" scope_report.txt | grep -o "[0-9]*")
        UNCOVERED=$(grep "Uncovered nodes:" scope_report.txt | grep -o "[0-9]*")
        echo "covered=$COVERED" >> $GITHUB_OUTPUT
        echo "uncovered=$UNCOVERED" >> $GITHUB_OUTPUT

    - name: Comment PR with scope report
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v6
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        script: |
          const fs = require('fs');
          const report = fs.readFileSync('scope_report.txt', 'utf8');
          const covered = '${{ steps.coverage.outputs.covered }}';
          const uncovered = '${{ steps.coverage.outputs.uncovered }}';

          const comment = `## üîç Semantic Scope Validation Report

          **Coverage:** ${covered} covered / ${uncovered} uncovered nodes

          <details>
          <summary>Full Report</summary>

          \`\`\`
          ${report}
          \`\`\`

          </details>`;

          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          })

    - name: Upload scope report
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: scope-validation-report
        path: scope_report.txt